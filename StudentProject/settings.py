"""
Django settings for StudentProject project.

Generated by 'django-admin startproject' using Django 4.0.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure--b3o2%5mqj+zyy9kf1i_pted#4wc4sp-^pc*akqc^2e_$s3b1g'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'student',
    'csv_upload',
    'user_app',
    'crispy_forms',
    'crispy_bootstrap5',
]

CRISPY_TEMPLATE_PACK = 'bootstrap5'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'StudentProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'StudentProject.wsgi.application'



# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

# import toml
# config = toml.load("database.toml")
# database_config = config["databse"]                           #toml database conf file


import configparser

config = configparser.ConfigParser()
config.read(r'D:\Sheetal\Python\Scripting files\Django_Projects\StudentProject\StudentProject\database.conf')

# python manage.py migrate --database=second    # When we do migration, it works on 'default' database. To mention different databse, this is the command

DATABASES = {
    'default': {
        'ENGINE': config.get('primary_db', 'ENGINE'),
        'NAME': config.get('primary_db', 'NAME'),
        'USER': config.get('primary_db', 'USER'),
        'PASSWORD': config.get('primary_db', 'PASSWORD'),
        'HOST': config.get('primary_db', 'HOST'),  # Change this if your MySQL server is hosted elsewhere
        'PORT': config.get('primary_db', 'PORT'),       # Change this if your MySQL server is using a different port
    },
    'second': {
        'ENGINE': config.get('secondary_db', 'ENGINE'),
        'NAME': config.get('secondary_db', 'NAME'),
        'USER': config.get('secondary_db', 'USER'),
        'PASSWORD': config.get('secondary_db', 'PASSWORD'),
        'HOST': config.get('secondary_db', 'HOST'),  # Change this if your MySQL server is hosted elsewhere
        'PORT': config.get('secondary_db', 'PORT'),       # Change this if your MySQL server is using a different port
    }

}


# #print(DATABASES)

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
#d:\Sheetal\Python\Scripting files\Django_Projects\StudentProject\StudentProject\settings.py
#BASE_DIR = d:\Sheetal\Python\Scripting files\Django_Projects\StudentProject

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

LOGIN_REDIRECT_URL= '/login'
